name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1
  SERVICE_CONNECTION: Azure Dev
  STORAGE_ACCOUNT_PRODUCTS: mhraproductsdev
  STORAGE_ACCOUNT_CPD: mhracpddev

stages:
  - stage: web
    dependsOn: []
    jobs:
      - job: web
        dependsOn: []
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |
              export ASSET_PREFIX=$(Build.SourceBranchName)
              export AZURE_SEARCH_API_VERSION=2017-11-11
              export AZURE_SEARCH_EXACTNESS_BOOST=4
              export AZURE_SEARCH_INDEX=products-index
              export AZURE_SEARCH_KEY=CFBCBE8AA11AA871C14001527533870C
              export AZURE_SEARCH_SCORING_PROFILE=preferKeywords
              export AZURE_SEARCH_SERVICE=mhraproductsdev
              export AZURE_SEARCH_WORD_FUZZINESS=1
              export GOOGLE_GTM_CONTAINER_ID=GTM-WJ5TW34
              export GOOGLE_TRACKING_ID=UA-6838115-11
              yarn
              yarn build
              yarn export
            displayName: Build web
            workingDirectory: $(Build.SourcesDirectory)/medicines/web

          - script: |
              apt-get install -y wget
              wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
              sudo dpkg -i google-chrome-stable_current_amd64.deb
              yarn dev & sleep 5
              yarn run cypress run --browser chrome
              kill $!
            displayName: Run end-to-end tests
            workingDirectory: $(Build.SourcesDirectory)/medicines/web

          - task: PublishBuildArtifacts@1
            displayName: Publish end-to-end test screenshots
            condition: always()
            inputs:
              pathtoPublish: $(System.DefaultWorkingDirectory)/medicines/web/cypress/screenshots
              artifactName: CypressScreenshots

          - publish: $(System.DefaultWorkingDirectory)/medicines/web/cypress/videos
            displayName: Publish end-to-end test videos
            artifact: CypressVideo
            condition: always()

          - script: |
              yarn start & sleep 5 && yarn run pa11y-ci && kill $!
            displayName: Check accessibility
            workingDirectory: $(Build.SourcesDirectory)/medicines/web

          - task: CopyFiles@2
            displayName: Copy Files
            inputs:
              SourceFolder: $(Build.SourcesDirectory)/medicines/web/dist
              TargetFolder: $(build.artifactstagingdirectory)
              CleanTargetFolder: true
          - task: PublishBuildArtifacts@1
            displayName: Publish Build Artifacts
            inputs:
              PathtoPublish: $(build.artifactstagingdirectory)
              ArtifactName: build-medicines
      - job: learning_web
        dependsOn: []
        pool:
          vmImage: ubuntu-latest
        variables:
          GOOGLE_ANALYTICS_TRACKING_ID: UA-6838115-14
          GOOGLE_TAG_MANAGER_ID: GTM-WJ5TW34
        steps:
          - script: |
              yarn && yarn build
            displayName: Build learning web (master)
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
            workingDirectory: $(Build.SourcesDirectory)/learning/web
          - script: |
              export PATH_PREFIX=$(Build.SourceBranchName) && yarn && yarn build
            displayName: Build learning web (branch)
            condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
            workingDirectory: $(Build.SourcesDirectory)/learning/web
          - script: |
              yarn a11y
            displayName: Check accessibility
            workingDirectory: $(Build.SourcesDirectory)/learning/web
          - task: CopyFiles@2
            displayName: Copy Files
            inputs:
              SourceFolder: $(Build.SourcesDirectory)/learning/web/public
              TargetFolder: $(build.artifactstagingdirectory)
              CleanTargetFolder: true
          - task: PublishBuildArtifacts@1
            displayName: Publish Build Artifacts
            inputs:
              PathtoPublish: $(build.artifactstagingdirectory)
              ArtifactName: build-learning
  - stage: deploy_web
    dependsOn: [web]
    jobs:
      - deployment: DeployProductsWeb
        displayName: Deploy Products Web
        pool:
          vmImage: windows-latest
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: build-medicines
                - task: AzureFileCopy@3
                  displayName: Copy to Blob Storage (master)
                  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
                  inputs:
                    sourcePath: $(Pipeline.Workspace)/build-medicines
                    azureSubscription: $(SERVICE_CONNECTION)
                    destination: azureBlob
                    storage: $(STORAGE_ACCOUNT_PRODUCTS)
                    containerName: $web
                - task: AzureFileCopy@3
                  displayName: Copy to Blob Storage ($(Build.SourceBranchName))
                  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
                  inputs:
                    sourcePath: $(Pipeline.Workspace)/build-medicines
                    azureSubscription: $(SERVICE_CONNECTION)
                    destination: azureBlob
                    storage: $(STORAGE_ACCOUNT_PRODUCTS)
                    containerName: $(Build.SourceBranchName)
                - task: AzureCLI@2
                  displayName: Set bucket to be public
                  inputs:
                    azureSubscription: $(SERVICE_CONNECTION)
                    scriptType: ps
                    scriptLocation: inlineScript
                    inlineScript: |
                      az storage container set-permission `
                        --public-access container `
                        --name $(Build.SourceBranchName) `
                        --account-name=$(STORAGE_ACCOUNT_PRODUCTS)
      - deployment: DeployCPDWeb
        displayName: Deploy CPD Web
        pool:
          vmImage: windows-latest
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: build-learning
                - task: AzureFileCopy@3
                  displayName: Copy to Blob Storage (master)
                  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
                  inputs:
                    sourcePath: $(Pipeline.Workspace)/build-learning
                    azureSubscription: $(SERVICE_CONNECTION)
                    destination: azureBlob
                    storage: $(STORAGE_ACCOUNT_CPD)
                    containerName: $web
                - task: AzureFileCopy@3
                  displayName: Copy to Blob Storage ($(Build.SourceBranchName))
                  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
                  inputs:
                    sourcePath: $(Pipeline.Workspace)/build-learning
                    azureSubscription: $(SERVICE_CONNECTION)
                    destination: azureBlob
                    storage: $(STORAGE_ACCOUNT_CPD)
                    containerName: $(Build.SourceBranchName)
                - task: AzureCLI@2
                  displayName: Set bucket to be public
                  inputs:
                    azureSubscription: $(SERVICE_CONNECTION)
                    scriptType: ps
                    scriptLocation: inlineScript
                    inlineScript: |
                      az storage container set-permission `
                        --public-access container `
                        --name $(Build.SourceBranchName) `
                        --account-name=$(STORAGE_ACCOUNT_CPD)
  - stage: services
    dependsOn: []
    jobs:
      - job: services_master
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        dependsOn: []
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |
              set -xeo pipefail
              export CARGO_HOME="$HOME/.cargo"
              curl https://sh.rustup.rs -sSf | sh -s -- -y
              source $HOME/.cargo/env
              rustup toolchain list
              rustup default beta
              rustc -Vv
              cargo -V
              echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
            displayName: Install stable Rust
          - script: |
              cargo build -v --release
            displayName: Build services
            workingDirectory: $(Build.SourcesDirectory)/medicines
          - script: |
              cargo test -v --release
            workingDirectory: $(Build.SourcesDirectory)/medicines
            displayName: Run tests
      - job: services_branch
        condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
        dependsOn: []
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |
              set -xeo pipefail
              export CARGO_HOME="$HOME/.cargo"
              curl https://sh.rustup.rs -sSf | sh -s -- -y
              source $HOME/.cargo/env
              rustup toolchain list
              rustup default nightly
              rustc -Vv
              cargo -V
              echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
            displayName: Install nightly Rust
          - script: |
              cargo build -v
            displayName: Build services
            workingDirectory: $(Build.SourcesDirectory)/medicines
          - script: |
              cargo test -v
            workingDirectory: $(Build.SourcesDirectory)/medicines
            displayName: Run tests
